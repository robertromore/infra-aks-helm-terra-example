name: API CI/CD

on:
  push:
    branches: [main, develop]
    paths: ["apps/api/**", "infrastructure/helm/api/**"]
  pull_request:
    branches: [main]
    paths: ["apps/api/**", "infrastructure/helm/api/**"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/api

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testing
          POSTGRES_USER: laravel
        options: >-
          --health-cmd pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, bcmath, pdo_pgsql
          coverage: xdebug

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('apps/api/composer.lock') }}

      - name: Install dependencies
        run: |
          cd apps/api
          composer install --prefer-dist --no-progress --no-suggest

      - name: Create .env file
        run: |
          cd apps/api
          cp .env.testing .env
          php artisan key:generate

      - name: Run migrations
        run: |
          cd apps/api
          php artisan migrate --force

      - name: Run tests
        run: |
          cd apps/api
          vendor/bin/phpunit --coverage-text

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v4

      - name: Set environment
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "NAMESPACE=production" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "NAMESPACE=staging" >> $GITHUB_ENV
          fi

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group monorepo-rg --name monorepo-aks

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Deploy to AKS
        run: |
          helm upgrade --install api-${{ env.ENVIRONMENT }} \
            ./infrastructure/helm/api \
            --namespace ${{ env.NAMESPACE }} \
            --create-namespace \
            --values ./infrastructure/helm/api/values-${{ env.ENVIRONMENT }}.yaml \
            --set image.tag=${{ github.sha }} \
            --wait
